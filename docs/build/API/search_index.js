var search_data = {
    'index': {
        'searchIndex': ["ffmpeg","ffmpeg\\exception","ffmpeg\\format","ffmpeg\\format\\audio","ffmpeg\\format\\video","ffmpeg\\adapterinterface","ffmpeg\\binary","ffmpeg\\exception\\binarynotfoundexception","ffmpeg\\exception\\exception","ffmpeg\\exception\\invalidargumentexception","ffmpeg\\exception\\logicexception","ffmpeg\\exception\\runtimeexception","ffmpeg\\ffmpeg","ffmpeg\\ffprobe","ffmpeg\\format\\advancedaudio","ffmpeg\\format\\advancedvideo","ffmpeg\\format\\audio","ffmpeg\\format\\audio\\flac","ffmpeg\\format\\audio\\mp3","ffmpeg\\format\\defaultaudio","ffmpeg\\format\\defaultvideo","ffmpeg\\format\\interactiveaudio","ffmpeg\\format\\interactivevideo","ffmpeg\\format\\video","ffmpeg\\format\\video\\ogg","ffmpeg\\format\\video\\webm","ffmpeg\\format\\video\\x264","ffmpeg\\adapterinterface::load","ffmpeg\\binary::__construct","ffmpeg\\binary::__destruct","ffmpeg\\binary::load","ffmpeg\\ffmpeg::__destruct","ffmpeg\\ffmpeg::open","ffmpeg\\ffmpeg::setprober","ffmpeg\\ffmpeg::close","ffmpeg\\ffmpeg::extractimage","ffmpeg\\ffmpeg::encode","ffmpeg\\ffprobe::probeformat","ffmpeg\\ffprobe::probestreams","ffmpeg\\format\\advancedaudio::getaudiosamplerate","ffmpeg\\format\\advancedvideo::getwidth","ffmpeg\\format\\advancedvideo::getheight","ffmpeg\\format\\advancedvideo::getresizemode","ffmpeg\\format\\advancedvideo::getframerate","ffmpeg\\format\\advancedvideo::getgopsize","ffmpeg\\format\\audio::getaudiocodec","ffmpeg\\format\\audio::getkilobitrate","ffmpeg\\format\\audio\\flac::getavailableaudiocodecs","ffmpeg\\format\\audio\\mp3::getavailableaudiocodecs","ffmpeg\\format\\defaultaudio::getextraparams","ffmpeg\\format\\defaultaudio::getaudiocodec","ffmpeg\\format\\defaultaudio::setaudiocodec","ffmpeg\\format\\defaultaudio::getaudiosamplerate","ffmpeg\\format\\defaultaudio::setaudiosamplerate","ffmpeg\\format\\defaultaudio::getkilobitrate","ffmpeg\\format\\defaultaudio::setkilobitrate","ffmpeg\\format\\defaultvideo::getwidth","ffmpeg\\format\\defaultvideo::getheight","ffmpeg\\format\\defaultvideo::setdimensions","ffmpeg\\format\\defaultvideo::setresizemode","ffmpeg\\format\\defaultvideo::getresizemode","ffmpeg\\format\\defaultvideo::getframerate","ffmpeg\\format\\defaultvideo::setframerate","ffmpeg\\format\\defaultvideo::getvideocodec","ffmpeg\\format\\defaultvideo::setvideocodec","ffmpeg\\format\\defaultvideo::getgopsize","ffmpeg\\format\\defaultvideo::setgopsize","ffmpeg\\format\\interactiveaudio::getavailableaudiocodecs","ffmpeg\\format\\interactivevideo::getavailablevideocodecs","ffmpeg\\format\\video::getvideocodec","ffmpeg\\format\\video\\ogg::getavailableaudiocodecs","ffmpeg\\format\\video\\ogg::getavailablevideocodecs","ffmpeg\\format\\video\\webm::getextraparams","ffmpeg\\format\\video\\webm::getavailableaudiocodecs","ffmpeg\\format\\video\\webm::getavailablevideocodecs","ffmpeg\\format\\video\\x264::getavailableaudiocodecs","ffmpeg\\format\\video\\x264::getavailablevideocodecs"],
        'info': [["FFMpeg","","FFMpeg.html","","",3],["FFMpeg\\Exception","","FFMpeg\/Exception.html","","",3],["FFMpeg\\Format","","FFMpeg\/Format.html","","",3],["FFMpeg\\Format\\Audio","","FFMpeg\/Format\/Audio.html","","",3],["FFMpeg\\Format\\Video","","FFMpeg\/Format\/Video.html","","",3],["AdapterInterface","FFMpeg","FFMpeg\/AdapterInterface.html","","FFMpeg Adapter interface",1],["Binary","FFMpeg","FFMpeg\/Binary.html","","Binary abstract class",1],["BinaryNotFoundException","FFMpeg\\Exception","FFMpeg\/Exception\/BinaryNotFoundException.html"," < Exception","",1],["Exception","FFMpeg\\Exception","FFMpeg\/Exception\/Exception.html","","",1],["InvalidArgumentException","FFMpeg\\Exception","FFMpeg\/Exception\/InvalidArgumentException.html"," < InvalidArgumentException","",1],["LogicException","FFMpeg\\Exception","FFMpeg\/Exception\/LogicException.html"," < LogicException","",1],["RuntimeException","FFMpeg\\Exception","FFMpeg\/Exception\/RuntimeException.html"," < RuntimeException","",1],["FFMpeg","FFMpeg","FFMpeg\/FFMpeg.html"," < Binary","FFMpeg driver",1],["FFProbe","FFMpeg","FFMpeg\/FFProbe.html"," < Binary","FFProbe driver",1],["AdvancedAudio","FFMpeg\\Format","FFMpeg\/Format\/AdvancedAudio.html","","",1],["AdvancedVideo","FFMpeg\\Format","FFMpeg\/Format\/AdvancedVideo.html","","",1],["Audio","FFMpeg\\Format","FFMpeg\/Format\/Audio.html","","",1],["Flac","FFMpeg\\Format\\Audio","FFMpeg\/Format\/Audio\/Flac.html"," < DefaultAudio","The Flac audio format",1],["Mp3","FFMpeg\\Format\\Audio","FFMpeg\/Format\/Audio\/Mp3.html"," < DefaultAudio","The MP3 audio format",1],["DefaultAudio","FFMpeg\\Format","FFMpeg\/Format\/DefaultAudio.html","","The abstract default Audio format",1],["DefaultVideo","FFMpeg\\Format","FFMpeg\/Format\/DefaultVideo.html"," < DefaultAudio","The abstract default Video format",1],["InteractiveAudio","FFMpeg\\Format","FFMpeg\/Format\/InteractiveAudio.html","","",1],["InteractiveVideo","FFMpeg\\Format","FFMpeg\/Format\/InteractiveVideo.html","","",1],["Video","FFMpeg\\Format","FFMpeg\/Format\/Video.html","","",1],["Ogg","FFMpeg\\Format\\Video","FFMpeg\/Format\/Video\/Ogg.html"," < DefaultVideo","The Ogg video format",1],["WebM","FFMpeg\\Format\\Video","FFMpeg\/Format\/Video\/WebM.html"," < DefaultVideo","The WebM video format",1],["X264","FFMpeg\\Format\\Video","FFMpeg\/Format\/Video\/X264.html"," < DefaultVideo","The X264 video format",1],["AdapterInterface::load","FFMpeg\\AdapterInterface","FFMpeg\/AdapterInterface.html#method_load","(<abbr title=\"Monolog\\Logger\">Logger<\/abbr> $logger)","Loads the adapter",2],["Binary::__construct","FFMpeg\\Binary","FFMpeg\/Binary.html#method___construct","(<abbr title=\"FFMpeg\\type\">type<\/abbr> $binary, <abbr title=\"Monolog\\Logger\">Logger<\/abbr> $logger)","Binary constructor",2],["Binary::__destruct","FFMpeg\\Binary","FFMpeg\/Binary.html#method___destruct","()","Destructor",2],["Binary::load","FFMpeg\\Binary","FFMpeg\/Binary.html#method_load","(<abbr title=\"Monolog\\Logger\">Logger<\/abbr> $logger)","Loads the adapter",2],["FFMpeg::__destruct","FFMpeg\\FFMpeg","FFMpeg\/FFMpeg.html#method___destruct","()","Destructor",2],["FFMpeg::open","FFMpeg\\FFMpeg","FFMpeg\/FFMpeg.html#method_open","(string $pathfile)","Opens a file in order to be processed",2],["FFMpeg::setProber","FFMpeg\\FFMpeg","FFMpeg\/FFMpeg.html#method_setProber","(<a href=\"FFMpeg\/FFProbe.html\"><abbr title=\"FFMpeg\\FFProbe\">FFProbe<\/abbr><\/a> $prober)","Set a prober",2],["FFMpeg::close","FFMpeg\\FFMpeg","FFMpeg\/FFMpeg.html#method_close","()","Close a file",2],["FFMpeg::extractImage","FFMpeg\\FFMpeg","FFMpeg\/FFMpeg.html#method_extractImage","(integer $time, string $output)","",2],["FFMpeg::encode","FFMpeg\\FFMpeg","FFMpeg\/FFMpeg.html#method_encode","(<a href=\"FFMpeg\/Format\/Audio.html\"><abbr title=\"FFMpeg\\Format\\Audio\">Audio<\/abbr><\/a> $format, string $outputPathfile, integer $threads = 1)","Encode the file to the specified format",2],["FFProbe::probeFormat","FFMpeg\\FFProbe","FFMpeg\/FFProbe.html#method_probeFormat","(string $pathfile)","Probe the format of a given file",2],["FFProbe::probeStreams","FFMpeg\\FFProbe","FFMpeg\/FFProbe.html#method_probeStreams","(string $pathfile)","Probe the streams contained in a given file",2],["AdvancedAudio::getAudioSampleRate","FFMpeg\\Format\\AdvancedAudio","FFMpeg\/Format\/AdvancedAudio.html#method_getAudioSampleRate","()","Get the audio sample rate",2],["AdvancedVideo::getWidth","FFMpeg\\Format\\AdvancedVideo","FFMpeg\/Format\/AdvancedVideo.html#method_getWidth","()","Returns the width",2],["AdvancedVideo::getHeight","FFMpeg\\Format\\AdvancedVideo","FFMpeg\/Format\/AdvancedVideo.html#method_getHeight","()","Returns the height",2],["AdvancedVideo::getResizeMode","FFMpeg\\Format\\AdvancedVideo","FFMpeg\/Format\/AdvancedVideo.html#method_getResizeMode","()","Get the current resize mode",2],["AdvancedVideo::getFrameRate","FFMpeg\\Format\\AdvancedVideo","FFMpeg\/Format\/AdvancedVideo.html#method_getFrameRate","()","Returns the frame rate",2],["AdvancedVideo::getGOPSize","FFMpeg\\Format\\AdvancedVideo","FFMpeg\/Format\/AdvancedVideo.html#method_getGOPSize","()","Returns the GOP size",2],["Audio::getAudioCodec","FFMpeg\\Format\\Audio","FFMpeg\/Format\/Audio.html#method_getAudioCodec","()","Returns the audio codec",2],["Audio::getKiloBitrate","FFMpeg\\Format\\Audio","FFMpeg\/Format\/Audio.html#method_getKiloBitrate","()","Get the kiloBitrate value",2],["Flac::getAvailableAudioCodecs","FFMpeg\\Format\\Audio\\Flac","FFMpeg\/Format\/Audio\/Flac.html#method_getAvailableAudioCodecs","()","{@inheritDoc}",2],["Mp3::getAvailableAudioCodecs","FFMpeg\\Format\\Audio\\Mp3","FFMpeg\/Format\/Audio\/Mp3.html#method_getAvailableAudioCodecs","()","{@inheritDoc}",2],["DefaultAudio::getExtraParams","FFMpeg\\Format\\DefaultAudio","FFMpeg\/Format\/DefaultAudio.html#method_getExtraParams","()","Returns extra parameters for the encoding",2],["DefaultAudio::getAudioCodec","FFMpeg\\Format\\DefaultAudio","FFMpeg\/Format\/DefaultAudio.html#method_getAudioCodec","()","{@inheritdoc}",2],["DefaultAudio::setAudioCodec","FFMpeg\\Format\\DefaultAudio","FFMpeg\/Format\/DefaultAudio.html#method_setAudioCodec","(string $audioCodec)","Set the audio codec, Should be in the available ones,",2],["DefaultAudio::getAudioSampleRate","FFMpeg\\Format\\DefaultAudio","FFMpeg\/Format\/DefaultAudio.html#method_getAudioSampleRate","()","Get the audio sample rate",2],["DefaultAudio::setAudioSampleRate","FFMpeg\\Format\\DefaultAudio","FFMpeg\/Format\/DefaultAudio.html#method_setAudioSampleRate","(integer $audioSampleRate)","Set the audio sample rate",2],["DefaultAudio::getKiloBitrate","FFMpeg\\Format\\DefaultAudio","FFMpeg\/Format\/DefaultAudio.html#method_getKiloBitrate","()","{@inheritdoc}",2],["DefaultAudio::setKiloBitrate","FFMpeg\\Format\\DefaultAudio","FFMpeg\/Format\/DefaultAudio.html#method_setKiloBitrate","(int $kiloBitrate)","Set the kiloBitrate value",2],["DefaultVideo::getWidth","FFMpeg\\Format\\DefaultVideo","FFMpeg\/Format\/DefaultVideo.html#method_getWidth","()","Returns the width",2],["DefaultVideo::getHeight","FFMpeg\\Format\\DefaultVideo","FFMpeg\/Format\/DefaultVideo.html#method_getHeight","()","Returns the height",2],["DefaultVideo::setDimensions","FFMpeg\\Format\\DefaultVideo","FFMpeg\/Format\/DefaultVideo.html#method_setDimensions","(integer $width, integer $height)","Set the dimensions",2],["DefaultVideo::setResizeMode","FFMpeg\\Format\\DefaultVideo","FFMpeg\/Format\/DefaultVideo.html#method_setResizeMode","(string $mode)","Set the resize mode",2],["DefaultVideo::getResizeMode","FFMpeg\\Format\\DefaultVideo","FFMpeg\/Format\/DefaultVideo.html#method_getResizeMode","()","Get the current resize mode",2],["DefaultVideo::getFrameRate","FFMpeg\\Format\\DefaultVideo","FFMpeg\/Format\/DefaultVideo.html#method_getFrameRate","()","Returns the frame rate",2],["DefaultVideo::setFrameRate","FFMpeg\\Format\\DefaultVideo","FFMpeg\/Format\/DefaultVideo.html#method_setFrameRate","(integer $frameRate)","Set the framerate",2],["DefaultVideo::getVideoCodec","FFMpeg\\Format\\DefaultVideo","FFMpeg\/Format\/DefaultVideo.html#method_getVideoCodec","()","{@inheritdoc}",2],["DefaultVideo::setVideoCodec","FFMpeg\\Format\\DefaultVideo","FFMpeg\/Format\/DefaultVideo.html#method_setVideoCodec","(string $videoCodec)","Set the video codec, Should be in the available ones,",2],["DefaultVideo::getGOPsize","FFMpeg\\Format\\DefaultVideo","FFMpeg\/Format\/DefaultVideo.html#method_getGOPsize","()","{@inheritdoc}",2],["DefaultVideo::setGOPsize","FFMpeg\\Format\\DefaultVideo","FFMpeg\/Format\/DefaultVideo.html#method_setGOPsize","(integer $GOPsize)","Set the GOP size",2],["InteractiveAudio::getAvailableAudioCodecs","FFMpeg\\Format\\InteractiveAudio","FFMpeg\/Format\/InteractiveAudio.html#method_getAvailableAudioCodecs","()","Returns the list of available audio codecs for this",2],["InteractiveVideo::getAvailableVideoCodecs","FFMpeg\\Format\\InteractiveVideo","FFMpeg\/Format\/InteractiveVideo.html#method_getAvailableVideoCodecs","()","Returns the list of available video codecs for this",2],["Video::getVideoCodec","FFMpeg\\Format\\Video","FFMpeg\/Format\/Video.html#method_getVideoCodec","()","Returns the video codec",2],["Ogg::getAvailableAudioCodecs","FFMpeg\\Format\\Video\\Ogg","FFMpeg\/Format\/Video\/Ogg.html#method_getAvailableAudioCodecs","()","{@inheritDoc}",2],["Ogg::getAvailableVideoCodecs","FFMpeg\\Format\\Video\\Ogg","FFMpeg\/Format\/Video\/Ogg.html#method_getAvailableVideoCodecs","()","{@inheritDoc}",2],["WebM::getExtraParams","FFMpeg\\Format\\Video\\WebM","FFMpeg\/Format\/Video\/WebM.html#method_getExtraParams","()","{@inheritDoc}",2],["WebM::getAvailableAudioCodecs","FFMpeg\\Format\\Video\\WebM","FFMpeg\/Format\/Video\/WebM.html#method_getAvailableAudioCodecs","()","{@inheritDoc}",2],["WebM::getAvailableVideoCodecs","FFMpeg\\Format\\Video\\WebM","FFMpeg\/Format\/Video\/WebM.html#method_getAvailableVideoCodecs","()","{@inheritDoc}",2],["X264::getAvailableAudioCodecs","FFMpeg\\Format\\Video\\X264","FFMpeg\/Format\/Video\/X264.html#method_getAvailableAudioCodecs","()","{@inheritDoc}",2],["X264::getAvailableVideoCodecs","FFMpeg\\Format\\Video\\X264","FFMpeg\/Format\/Video\/X264.html#method_getAvailableVideoCodecs","()","{@inheritDoc}",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']